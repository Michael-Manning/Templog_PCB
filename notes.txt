Parts -------------

sensor:
SHT45

controller:
ESP32-S3-MINI-1

eeprom:
M24512-WMN6TP

fuel guage:
BQ27441

charger:
BQ24075

battery:

RTC:
DS3231MZ

USB connector:
GCT USB4105

Power path selector:
LM66200DRLR

USB voltage regulator:
TLV75533PDBVR

connector
FPC-05F-24PH20
-------------------


power inductor maybe?
L_Sunlord_SWPA4030S

Battery management reference:
https://cdn.sparkfun.com/assets/learn_tutorials/5/3/0/sparkfun-battery-babysitter-v10-schematic.pdf

esp32 raw e-ink driver example PCB:
https://www.waveshare.com/wiki/E-Paper_ESP32_Driver_Board

todo:

- verify battery connector polarity

- double check charger and fuel guage schematic reference

- ensure all i2c addresses are unique

- add touch points to break out boot/reset for esp32


- add voltage 5v to 3.3v voltage divider to allow esp32 to detect usb presence and indicate that the device is charging. (unless powerpath selector somehow indicates this)
I forget what the "charge" pin is for. Maybe that solves the problem?

- determine which pins can be used to wake up esp32 from deep sleep. If using soft power switch IC, and if if interupt pulls low, verify that the esp32 can be woken up
from a pin being pulled low, not high

- might be worth searching a bit longer for an even better voltage regulator. Ideally one that has a higher current rating, better efficiency, but not in a BGA package

- determine if button manager interrupt pin high voltage is above 3.3v



